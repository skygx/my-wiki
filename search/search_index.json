{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"k8s/first/","text":"\u8bb2\u5e08\uff1a\u674e\u632f\u826f \u5b98\u65b9\u7f51\u7ad9\uff1a http://www.ctnrs.com \u8bf4\u660e\uff1a \u5f3a\u70c8\u5efa\u8bae\u5b66\u4e60\u8bfe\u5802\u89c6\u9891\uff0c\u66f4\u591a\u7ec6\u8282\u90fd\u5728\u91cc\u9762\uff01 \u672c\u6587\u6863\u4e3a\u5185\u90e8\u5b66\u5458\u8d44\u6599\uff0c\u8bf7\u4e0d\u8981\u968f\u610f\u8f6c\u53d1\u3002 kubeadm\u662f\u5b98\u65b9\u793e\u533a\u63a8\u51fa\u7684\u4e00\u4e2a\u7528\u4e8e\u5feb\u901f\u90e8\u7f72kubernetes\u96c6\u7fa4\u7684\u5de5\u5177\u3002 \u8fd9\u4e2a\u5de5\u5177\u80fd\u901a\u8fc7\u4e24\u6761\u6307\u4ee4\u5b8c\u6210\u4e00\u4e2akubernetes\u96c6\u7fa4\u7684\u90e8\u7f72\uff1a # \u521b\u5efa\u4e00\u4e2a Master \u8282\u70b9 $ kubeadm init # \u5c06\u4e00\u4e2a Node \u8282\u70b9\u52a0\u5165\u5230\u5f53\u524d\u96c6\u7fa4\u4e2d $ kubeadm join <Master\u8282\u70b9\u7684IP\u548c\u7aef\u53e3 > 1. \u5b89\u88c5\u8981\u6c42 \u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u90e8\u7f72Kubernetes\u96c6\u7fa4\u673a\u5668\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u4e2a\u6761\u4ef6\uff1a \u4e00\u53f0\u6216\u591a\u53f0\u673a\u5668\uff0c\u64cd\u4f5c\u7cfb\u7edf CentOS7.x-86_x64 \u786c\u4ef6\u914d\u7f6e\uff1a2GB\u6216\u66f4\u591aRAM\uff0c2\u4e2aCPU\u6216\u66f4\u591aCPU\uff0c\u786c\u76d830GB\u6216\u66f4\u591a \u96c6\u7fa4\u4e2d\u6240\u6709\u673a\u5668\u4e4b\u95f4\u7f51\u7edc\u4e92\u901a \u53ef\u4ee5\u8bbf\u95ee\u5916\u7f51\uff0c\u9700\u8981\u62c9\u53d6\u955c\u50cf \u7981\u6b62swap\u5206\u533a 2. \u51c6\u5907\u73af\u5883 \u89d2\u8272 IP k8s-master 192.168.31.61 k8s-node1 192.168.31.62 k8s-node2 192.168.31.63 \u5173\u95ed\u9632\u706b\u5899\uff1a $ systemctl stop firewalld $ systemctl disable firewalld \u5173\u95edselinux\uff1a $ sed -i 's/enforcing/disabled/' /etc/selinux/config # \u6c38\u4e45 $ setenforce 0 # \u4e34\u65f6 \u5173\u95edswap\uff1a $ swapoff -a # \u4e34\u65f6 $ vim /etc/fstab # \u6c38\u4e45 \u8bbe\u7f6e\u4e3b\u673a\u540d\uff1a $ hostnamectl set-hostname <hostname> \u5728master\u6dfb\u52a0hosts\uff1a $ cat >> /etc/hosts << EOF 192.168.31.61 k8s-master 192.168.31.62 k8s-node1 192.168.31.63 k8s-node2 EOF \u5c06\u6865\u63a5\u7684IPv4\u6d41\u91cf\u4f20\u9012\u5230iptables\u7684\u94fe\uff1a $ cat > /etc/sysctl.d/k8s.conf << EOF net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 EOF $ sysctl --system # \u751f\u6548 \u65f6\u95f4\u540c\u6b65\uff1a $ yum install ntpdate -y $ ntpdate time.windows.com 3. \u6240\u6709\u8282\u70b9\u5b89\u88c5Docker/kubeadm/kubelet Kubernetes\u9ed8\u8ba4CRI\uff08\u5bb9\u5668\u8fd0\u884c\u65f6\uff09\u4e3aDocker\uff0c\u56e0\u6b64\u5148\u5b89\u88c5Docker\u3002 3.1 \u5b89\u88c5Docker $ wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo $ yum -y install docker-ce-18.06.1.ce-3.el7 $ systemctl enable docker && systemctl start docker $ docker --version Docker version 18.06.1-ce, build e68fc7a # cat > /etc/docker/daemon.json << EOF { \"registry-mirrors\": [\"https://b9pmyelo.mirror.aliyuncs.com\"] } EOF 3.2 \u6dfb\u52a0\u963f\u91cc\u4e91YUM\u8f6f\u4ef6\u6e90 $ cat > /etc/yum.repos.d/kubernetes.repo << EOF [kubernetes] name=Kubernetes baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64 enabled=1 gpgcheck=0 repo_gpgcheck=0 gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg EOF ubuntu\u7cfb\u7edf\u914d\u7f6e\u6e90\u5e76\u5b89\u88c5\uff1a https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#%E5%AE%89%E8%A3%85-kubeadm-kubelet-%E5%92%8C-kubectl 3.3 \u5b89\u88c5kubeadm\uff0ckubelet\u548ckubectl \u7531\u4e8e\u7248\u672c\u66f4\u65b0\u9891\u7e41\uff0c\u8fd9\u91cc\u6307\u5b9a\u7248\u672c\u53f7\u90e8\u7f72\uff1a $ yum install -y kubelet-1.18.0 kubeadm-1.18.0 kubectl-1.18.0 $ systemctl enable kubelet 4. \u90e8\u7f72Kubernetes Master \u53c2\u8003\u6587\u6863\uff1a https://kubernetes.io/zh/docs/reference/setup-tools/kubeadm/kubeadm-init/#config-file https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#initializing-your-control-plane-node \u5728192.168.31.61\uff08Master\uff09\u6267\u884c\u3002 $ kubeadm init \\ --apiserver-advertise-address=192.168.31.61 \\ --image-repository registry.aliyuncs.com/google_containers \\ --kubernetes-version v1.18.0 \\ --service-cidr=10.96.0.0/12 \\ --pod-network-cidr=10.244.0.0/16 \\ --ignore-preflight-errors=all \u7531\u4e8e\u9ed8\u8ba4\u62c9\u53d6\u955c\u50cf\u5730\u5740k8s.gcr.io\u56fd\u5185\u65e0\u6cd5\u8bbf\u95ee\uff0c\u8fd9\u91cc\u6307\u5b9a\u963f\u91cc\u4e91\u955c\u50cf\u4ed3\u5e93\u5730\u5740\u3002 \u6216\u8005\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u5f15\u5bfc\uff1a $ vi kubeadm.conf apiVersion: kubeadm.k8s.io/v1beta2 kind: ClusterConfiguration kubernetesVersion: v1.18.0 imageRepository: registry.aliyuncs.com/google_containers networking: podSubnet: 10.244.0.0/16 serviceSubnet: 10.96.0.0/12 $ kubeadm init --config kubeadm.conf --ignore-preflight-errors=all \u4f7f\u7528kubectl\u5de5\u5177\uff1a mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config $ kubectl get nodes 5. \u52a0\u5165Kubernetes Node \u5728192.168.31.62/63\uff08Node\uff09\u6267\u884c\u3002 \u5411\u96c6\u7fa4\u6dfb\u52a0\u65b0\u8282\u70b9\uff0c\u6267\u884c\u5728kubeadm init\u8f93\u51fa\u7684kubeadm join\u547d\u4ee4\uff1a $ kubeadm join 192.168.31.61:6443 --token esce21.q6hetwm8si29qxwn \\ --discovery-token-ca-cert-hash sha256:00603a05805807501d7181c3d60b478788408cfe6cedefedb1f97569708be9c5 \u9ed8\u8ba4token\u6709\u6548\u671f\u4e3a24\u5c0f\u65f6\uff0c\u5f53\u8fc7\u671f\u4e4b\u540e\uff0c\u8be5token\u5c31\u4e0d\u53ef\u7528\u4e86\u3002\u8fd9\u65f6\u5c31\u9700\u8981\u91cd\u65b0\u521b\u5efatoken\uff0c\u64cd\u4f5c\u5982\u4e0b\uff1a # kubeadm token create # kubeadm token list # openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //' 63bca849e0e01691ae14eab449570284f0c3ddeea590f8da988c07fe2729e924 # kubeadm join 192.168.31.61:6443 --token nuja6n.o3jrhsffiqs9swnu --discovery-token-ca-cert-hash sha256:63bca849e0e01691ae14eab449570284f0c3ddeea590f8da988c07fe2729e924 kubeadm token create --print-join-command https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-join/ 6. \u7f51\u7edc\u65b9\u6848\uff08CNI\uff09 https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#pod-network \u6ce8\u610f\uff1a\u53ea\u9700\u8981\u90e8\u7f72\u4e0b\u9762\u5176\u4e2d\u4e00\u4e2a\uff0c\u63a8\u8350Calico\u3002 6.1 Calico Calico\u662f\u4e00\u4e2a\u7eaf\u4e09\u5c42\u7684\u6570\u636e\u4e2d\u5fc3\u7f51\u7edc\u65b9\u6848\uff0cCalico\u652f\u6301\u5e7f\u6cdb\u7684\u5e73\u53f0\uff0c\u5305\u62ecKubernetes\u3001OpenStack\u7b49\u3002 Calico \u5728\u6bcf\u4e00\u4e2a\u8ba1\u7b97\u8282\u70b9\u5229\u7528 Linux Kernel \u5b9e\u73b0\u4e86\u4e00\u4e2a\u9ad8\u6548\u7684\u865a\u62df\u8def\u7531\u5668\uff08 vRouter\uff09 \u6765\u8d1f\u8d23\u6570\u636e\u8f6c\u53d1\uff0c\u800c\u6bcf\u4e2a vRouter \u901a\u8fc7 BGP \u534f\u8bae\u8d1f\u8d23\u628a\u81ea\u5df1\u4e0a\u8fd0\u884c\u7684 workload \u7684\u8def\u7531\u4fe1\u606f\u5411\u6574\u4e2a Calico \u7f51\u7edc\u5185\u4f20\u64ad\u3002 \u6b64\u5916\uff0cCalico \u9879\u76ee\u8fd8\u5b9e\u73b0\u4e86 Kubernetes \u7f51\u7edc\u7b56\u7565\uff0c\u63d0\u4f9bACL\u529f\u80fd\u3002 https://docs.projectcalico.org/getting-started/kubernetes/quickstart wget https://docs.projectcalico.org/manifests/calico.yaml \u4e0b\u8f7d\u5b8c\u540e\u8fd8\u9700\u8981\u4fee\u6539\u91cc\u9762\u914d\u7f6e\u9879\uff1a \u5b9a\u4e49Pod\u7f51\u7edc\uff08CALICO_IPV4POOL_CIDR\uff09\uff0c\u4e0e\u524d\u9762pod CIDR\u914d\u7f6e\u4e00\u6837 \u9009\u62e9\u5de5\u4f5c\u6a21\u5f0f\uff08CALICO_IPV4POOL_IPIP\uff09\uff0c\u652f\u6301 BGP\uff08Never\uff09 \u3001 IPIP\uff08Always\uff09 \u3001 CrossSubnet \uff08\u5f00\u542fBGP\u5e76\u652f\u6301\u8de8\u5b50\u7f51\uff09 \u8c03\u6574calicao \u7f51\u7edc\u63d2\u4ef6\u7684\u7f51\u5361\u53d1\u73b0\u673a\u5236\uff0c\u4fee\u6539IP_AUTODETECTION_METHOD\u5bf9\u5e94\u7684value\u503c \"interface=ens.*\" \u4fee\u6539\u5b8c\u540e\u5e94\u7528\u6e05\u5355\uff1a # kubectl apply -f calico.yaml # kubectl get pods -n kube-system 6.2 Flannel Flannel\u662fCoreOS\u7ef4\u62a4\u7684\u4e00\u4e2a\u7f51\u7edc\u7ec4\u4ef6\uff0cFlannel\u4e3a\u6bcf\u4e2aPod\u63d0\u4f9b\u5168\u5c40\u552f\u4e00\u7684IP\uff0cFlannel\u4f7f\u7528ETCD\u6765\u5b58\u50a8Pod\u5b50\u7f51\u4e0eNode IP\u4e4b\u95f4\u7684\u5173\u7cfb\u3002flanneld\u5b88\u62a4\u8fdb\u7a0b\u5728\u6bcf\u53f0\u4e3b\u673a\u4e0a\u8fd0\u884c\uff0c\u5e76\u8d1f\u8d23\u7ef4\u62a4ETCD\u4fe1\u606f\u548c\u8def\u7531\u6570\u636e\u5305\u3002 wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml sed -i -r \"s#quay.io/coreos/flannel:.*-amd64#lizhenliang/flannel:v0.11.0-amd64#g\" kube-flannel.yml \u4fee\u6539\u56fd\u5185\u955c\u50cf\u4ed3\u5e93\u3002 7. \u6d4b\u8bd5kubernetes\u96c6\u7fa4 \u9a8c\u8bc1Pod\u5de5\u4f5c \u9a8c\u8bc1Pod\u7f51\u7edc\u901a\u4fe1 \u9a8c\u8bc1DNS\u89e3\u6790 \u5728Kubernetes\u96c6\u7fa4\u4e2d\u521b\u5efa\u4e00\u4e2apod\uff0c\u9a8c\u8bc1\u662f\u5426\u6b63\u5e38\u8fd0\u884c\uff1a $ kubectl create deployment nginx --image=nginx $ kubectl expose deployment nginx --port=80 --type=NodePort $ kubectl get pod,svc \u8bbf\u95ee\u5730\u5740\uff1ahttp://NodeIP:Port kubectl run dns-test -it --image=busybox:1.28.4 -- sh ping baidu.com nslookup kube-dns.kube-system nslookup kubernetes 8. \u90e8\u7f72 Dashboard $ wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.3/aio/deploy/recommended.yaml \u9ed8\u8ba4Dashboard\u53ea\u80fd\u96c6\u7fa4\u5185\u90e8\u8bbf\u95ee\uff0c\u4fee\u6539Service\u4e3aNodePort\u7c7b\u578b\uff0c\u66b4\u9732\u5230\u5916\u90e8\uff1a kind: Service apiVersion: v1 metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboard spec: ports: - port: 443 targetPort: 8443 nodePort: 30001 selector: k8s-app: kubernetes-dashboard type: NodePort \u8bbf\u95ee\u5730\u5740\uff1ahttps://NodeIP:30001 \u521b\u5efaservice account\u5e76\u7ed1\u5b9a\u9ed8\u8ba4cluster-admin\u7ba1\u7406\u5458\u96c6\u7fa4\u89d2\u8272\uff1a kubectl create serviceaccount dashboard-admin -n kube-system kubectl create clusterrolebinding dashboard-admin --clusterrole=cluster-admin --serviceaccount=kube-system:dashboard-admin kubectl describe secrets -n kube-system $(kubectl -n kube-system get secret | awk '/dashboard-admin/{print $1}') \u4f7f\u7528\u8f93\u51fa\u7684token\u767b\u5f55Dashboard\u3002 \u8bb2\u5e08\uff1a\u674e\u632f\u826f \u5b98\u65b9\u7f51\u7ad9\uff1a http://www.ctnrs.com","title":"First"},{"location":"k8s/first/#1","text":"\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u90e8\u7f72Kubernetes\u96c6\u7fa4\u673a\u5668\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u4e2a\u6761\u4ef6\uff1a \u4e00\u53f0\u6216\u591a\u53f0\u673a\u5668\uff0c\u64cd\u4f5c\u7cfb\u7edf CentOS7.x-86_x64 \u786c\u4ef6\u914d\u7f6e\uff1a2GB\u6216\u66f4\u591aRAM\uff0c2\u4e2aCPU\u6216\u66f4\u591aCPU\uff0c\u786c\u76d830GB\u6216\u66f4\u591a \u96c6\u7fa4\u4e2d\u6240\u6709\u673a\u5668\u4e4b\u95f4\u7f51\u7edc\u4e92\u901a \u53ef\u4ee5\u8bbf\u95ee\u5916\u7f51\uff0c\u9700\u8981\u62c9\u53d6\u955c\u50cf \u7981\u6b62swap\u5206\u533a","title":"1. \u5b89\u88c5\u8981\u6c42"},{"location":"k8s/first/#2","text":"\u89d2\u8272 IP k8s-master 192.168.31.61 k8s-node1 192.168.31.62 k8s-node2 192.168.31.63 \u5173\u95ed\u9632\u706b\u5899\uff1a $ systemctl stop firewalld $ systemctl disable firewalld \u5173\u95edselinux\uff1a $ sed -i 's/enforcing/disabled/' /etc/selinux/config # \u6c38\u4e45 $ setenforce 0 # \u4e34\u65f6 \u5173\u95edswap\uff1a $ swapoff -a # \u4e34\u65f6 $ vim /etc/fstab # \u6c38\u4e45 \u8bbe\u7f6e\u4e3b\u673a\u540d\uff1a $ hostnamectl set-hostname <hostname> \u5728master\u6dfb\u52a0hosts\uff1a $ cat >> /etc/hosts << EOF 192.168.31.61 k8s-master 192.168.31.62 k8s-node1 192.168.31.63 k8s-node2 EOF \u5c06\u6865\u63a5\u7684IPv4\u6d41\u91cf\u4f20\u9012\u5230iptables\u7684\u94fe\uff1a $ cat > /etc/sysctl.d/k8s.conf << EOF net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 EOF $ sysctl --system # \u751f\u6548 \u65f6\u95f4\u540c\u6b65\uff1a $ yum install ntpdate -y $ ntpdate time.windows.com","title":"2. \u51c6\u5907\u73af\u5883"},{"location":"k8s/first/#3-dockerkubeadmkubelet","text":"Kubernetes\u9ed8\u8ba4CRI\uff08\u5bb9\u5668\u8fd0\u884c\u65f6\uff09\u4e3aDocker\uff0c\u56e0\u6b64\u5148\u5b89\u88c5Docker\u3002","title":"3. \u6240\u6709\u8282\u70b9\u5b89\u88c5Docker/kubeadm/kubelet"},{"location":"k8s/first/#31-docker","text":"$ wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo $ yum -y install docker-ce-18.06.1.ce-3.el7 $ systemctl enable docker && systemctl start docker $ docker --version Docker version 18.06.1-ce, build e68fc7a # cat > /etc/docker/daemon.json << EOF { \"registry-mirrors\": [\"https://b9pmyelo.mirror.aliyuncs.com\"] } EOF","title":"3.1 \u5b89\u88c5Docker"},{"location":"k8s/first/#32-yum","text":"$ cat > /etc/yum.repos.d/kubernetes.repo << EOF [kubernetes] name=Kubernetes baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64 enabled=1 gpgcheck=0 repo_gpgcheck=0 gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg EOF ubuntu\u7cfb\u7edf\u914d\u7f6e\u6e90\u5e76\u5b89\u88c5\uff1a https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#%E5%AE%89%E8%A3%85-kubeadm-kubelet-%E5%92%8C-kubectl","title":"3.2 \u6dfb\u52a0\u963f\u91cc\u4e91YUM\u8f6f\u4ef6\u6e90"},{"location":"k8s/first/#33-kubeadmkubeletkubectl","text":"\u7531\u4e8e\u7248\u672c\u66f4\u65b0\u9891\u7e41\uff0c\u8fd9\u91cc\u6307\u5b9a\u7248\u672c\u53f7\u90e8\u7f72\uff1a $ yum install -y kubelet-1.18.0 kubeadm-1.18.0 kubectl-1.18.0 $ systemctl enable kubelet","title":"3.3 \u5b89\u88c5kubeadm\uff0ckubelet\u548ckubectl"},{"location":"k8s/first/#4-kubernetes-master","text":"\u53c2\u8003\u6587\u6863\uff1a https://kubernetes.io/zh/docs/reference/setup-tools/kubeadm/kubeadm-init/#config-file https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#initializing-your-control-plane-node \u5728192.168.31.61\uff08Master\uff09\u6267\u884c\u3002 $ kubeadm init \\ --apiserver-advertise-address=192.168.31.61 \\ --image-repository registry.aliyuncs.com/google_containers \\ --kubernetes-version v1.18.0 \\ --service-cidr=10.96.0.0/12 \\ --pod-network-cidr=10.244.0.0/16 \\ --ignore-preflight-errors=all \u7531\u4e8e\u9ed8\u8ba4\u62c9\u53d6\u955c\u50cf\u5730\u5740k8s.gcr.io\u56fd\u5185\u65e0\u6cd5\u8bbf\u95ee\uff0c\u8fd9\u91cc\u6307\u5b9a\u963f\u91cc\u4e91\u955c\u50cf\u4ed3\u5e93\u5730\u5740\u3002 \u6216\u8005\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u5f15\u5bfc\uff1a $ vi kubeadm.conf apiVersion: kubeadm.k8s.io/v1beta2 kind: ClusterConfiguration kubernetesVersion: v1.18.0 imageRepository: registry.aliyuncs.com/google_containers networking: podSubnet: 10.244.0.0/16 serviceSubnet: 10.96.0.0/12 $ kubeadm init --config kubeadm.conf --ignore-preflight-errors=all \u4f7f\u7528kubectl\u5de5\u5177\uff1a mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config $ kubectl get nodes","title":"4. \u90e8\u7f72Kubernetes Master"},{"location":"k8s/first/#5-kubernetes-node","text":"\u5728192.168.31.62/63\uff08Node\uff09\u6267\u884c\u3002 \u5411\u96c6\u7fa4\u6dfb\u52a0\u65b0\u8282\u70b9\uff0c\u6267\u884c\u5728kubeadm init\u8f93\u51fa\u7684kubeadm join\u547d\u4ee4\uff1a $ kubeadm join 192.168.31.61:6443 --token esce21.q6hetwm8si29qxwn \\ --discovery-token-ca-cert-hash sha256:00603a05805807501d7181c3d60b478788408cfe6cedefedb1f97569708be9c5 \u9ed8\u8ba4token\u6709\u6548\u671f\u4e3a24\u5c0f\u65f6\uff0c\u5f53\u8fc7\u671f\u4e4b\u540e\uff0c\u8be5token\u5c31\u4e0d\u53ef\u7528\u4e86\u3002\u8fd9\u65f6\u5c31\u9700\u8981\u91cd\u65b0\u521b\u5efatoken\uff0c\u64cd\u4f5c\u5982\u4e0b\uff1a # kubeadm token create # kubeadm token list # openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //' 63bca849e0e01691ae14eab449570284f0c3ddeea590f8da988c07fe2729e924 # kubeadm join 192.168.31.61:6443 --token nuja6n.o3jrhsffiqs9swnu --discovery-token-ca-cert-hash sha256:63bca849e0e01691ae14eab449570284f0c3ddeea590f8da988c07fe2729e924 kubeadm token create --print-join-command https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-join/","title":"5. \u52a0\u5165Kubernetes Node"},{"location":"k8s/first/#6-cni","text":"https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#pod-network \u6ce8\u610f\uff1a\u53ea\u9700\u8981\u90e8\u7f72\u4e0b\u9762\u5176\u4e2d\u4e00\u4e2a\uff0c\u63a8\u8350Calico\u3002","title":"6. \u7f51\u7edc\u65b9\u6848\uff08CNI\uff09"},{"location":"k8s/first/#61-calico","text":"Calico\u662f\u4e00\u4e2a\u7eaf\u4e09\u5c42\u7684\u6570\u636e\u4e2d\u5fc3\u7f51\u7edc\u65b9\u6848\uff0cCalico\u652f\u6301\u5e7f\u6cdb\u7684\u5e73\u53f0\uff0c\u5305\u62ecKubernetes\u3001OpenStack\u7b49\u3002 Calico \u5728\u6bcf\u4e00\u4e2a\u8ba1\u7b97\u8282\u70b9\u5229\u7528 Linux Kernel \u5b9e\u73b0\u4e86\u4e00\u4e2a\u9ad8\u6548\u7684\u865a\u62df\u8def\u7531\u5668\uff08 vRouter\uff09 \u6765\u8d1f\u8d23\u6570\u636e\u8f6c\u53d1\uff0c\u800c\u6bcf\u4e2a vRouter \u901a\u8fc7 BGP \u534f\u8bae\u8d1f\u8d23\u628a\u81ea\u5df1\u4e0a\u8fd0\u884c\u7684 workload \u7684\u8def\u7531\u4fe1\u606f\u5411\u6574\u4e2a Calico \u7f51\u7edc\u5185\u4f20\u64ad\u3002 \u6b64\u5916\uff0cCalico \u9879\u76ee\u8fd8\u5b9e\u73b0\u4e86 Kubernetes \u7f51\u7edc\u7b56\u7565\uff0c\u63d0\u4f9bACL\u529f\u80fd\u3002 https://docs.projectcalico.org/getting-started/kubernetes/quickstart wget https://docs.projectcalico.org/manifests/calico.yaml \u4e0b\u8f7d\u5b8c\u540e\u8fd8\u9700\u8981\u4fee\u6539\u91cc\u9762\u914d\u7f6e\u9879\uff1a \u5b9a\u4e49Pod\u7f51\u7edc\uff08CALICO_IPV4POOL_CIDR\uff09\uff0c\u4e0e\u524d\u9762pod CIDR\u914d\u7f6e\u4e00\u6837 \u9009\u62e9\u5de5\u4f5c\u6a21\u5f0f\uff08CALICO_IPV4POOL_IPIP\uff09\uff0c\u652f\u6301 BGP\uff08Never\uff09 \u3001 IPIP\uff08Always\uff09 \u3001 CrossSubnet \uff08\u5f00\u542fBGP\u5e76\u652f\u6301\u8de8\u5b50\u7f51\uff09 \u8c03\u6574calicao \u7f51\u7edc\u63d2\u4ef6\u7684\u7f51\u5361\u53d1\u73b0\u673a\u5236\uff0c\u4fee\u6539IP_AUTODETECTION_METHOD\u5bf9\u5e94\u7684value\u503c \"interface=ens.*\" \u4fee\u6539\u5b8c\u540e\u5e94\u7528\u6e05\u5355\uff1a # kubectl apply -f calico.yaml # kubectl get pods -n kube-system","title":"6.1 Calico"},{"location":"k8s/first/#62-flannel","text":"Flannel\u662fCoreOS\u7ef4\u62a4\u7684\u4e00\u4e2a\u7f51\u7edc\u7ec4\u4ef6\uff0cFlannel\u4e3a\u6bcf\u4e2aPod\u63d0\u4f9b\u5168\u5c40\u552f\u4e00\u7684IP\uff0cFlannel\u4f7f\u7528ETCD\u6765\u5b58\u50a8Pod\u5b50\u7f51\u4e0eNode IP\u4e4b\u95f4\u7684\u5173\u7cfb\u3002flanneld\u5b88\u62a4\u8fdb\u7a0b\u5728\u6bcf\u53f0\u4e3b\u673a\u4e0a\u8fd0\u884c\uff0c\u5e76\u8d1f\u8d23\u7ef4\u62a4ETCD\u4fe1\u606f\u548c\u8def\u7531\u6570\u636e\u5305\u3002 wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml sed -i -r \"s#quay.io/coreos/flannel:.*-amd64#lizhenliang/flannel:v0.11.0-amd64#g\" kube-flannel.yml \u4fee\u6539\u56fd\u5185\u955c\u50cf\u4ed3\u5e93\u3002","title":"6.2 Flannel"},{"location":"k8s/first/#7-kubernetes","text":"\u9a8c\u8bc1Pod\u5de5\u4f5c \u9a8c\u8bc1Pod\u7f51\u7edc\u901a\u4fe1 \u9a8c\u8bc1DNS\u89e3\u6790 \u5728Kubernetes\u96c6\u7fa4\u4e2d\u521b\u5efa\u4e00\u4e2apod\uff0c\u9a8c\u8bc1\u662f\u5426\u6b63\u5e38\u8fd0\u884c\uff1a $ kubectl create deployment nginx --image=nginx $ kubectl expose deployment nginx --port=80 --type=NodePort $ kubectl get pod,svc \u8bbf\u95ee\u5730\u5740\uff1ahttp://NodeIP:Port kubectl run dns-test -it --image=busybox:1.28.4 -- sh ping baidu.com nslookup kube-dns.kube-system nslookup kubernetes","title":"7. \u6d4b\u8bd5kubernetes\u96c6\u7fa4"},{"location":"k8s/first/#8-dashboard","text":"$ wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.3/aio/deploy/recommended.yaml \u9ed8\u8ba4Dashboard\u53ea\u80fd\u96c6\u7fa4\u5185\u90e8\u8bbf\u95ee\uff0c\u4fee\u6539Service\u4e3aNodePort\u7c7b\u578b\uff0c\u66b4\u9732\u5230\u5916\u90e8\uff1a kind: Service apiVersion: v1 metadata: labels: k8s-app: kubernetes-dashboard name: kubernetes-dashboard namespace: kubernetes-dashboard spec: ports: - port: 443 targetPort: 8443 nodePort: 30001 selector: k8s-app: kubernetes-dashboard type: NodePort \u8bbf\u95ee\u5730\u5740\uff1ahttps://NodeIP:30001 \u521b\u5efaservice account\u5e76\u7ed1\u5b9a\u9ed8\u8ba4cluster-admin\u7ba1\u7406\u5458\u96c6\u7fa4\u89d2\u8272\uff1a kubectl create serviceaccount dashboard-admin -n kube-system kubectl create clusterrolebinding dashboard-admin --clusterrole=cluster-admin --serviceaccount=kube-system:dashboard-admin kubectl describe secrets -n kube-system $(kubectl -n kube-system get secret | awk '/dashboard-admin/{print $1}') \u4f7f\u7528\u8f93\u51fa\u7684token\u767b\u5f55Dashboard\u3002 \u8bb2\u5e08\uff1a\u674e\u632f\u826f \u5b98\u65b9\u7f51\u7ad9\uff1a http://www.ctnrs.com","title":"8. \u90e8\u7f72 Dashboard"},{"location":"k8s/second/","text":"This is a new page. \u4e00\u7ea7\u6807\u9898 \u4e8c\u7ea7\u6807\u9898 \u4e09\u7ea7\u6807\u9898","title":"Second"},{"location":"k8s/second/#_1","text":"","title":"\u4e00\u7ea7\u6807\u9898"},{"location":"k8s/second/#_2","text":"","title":"\u4e8c\u7ea7\u6807\u9898"},{"location":"k8s/second/#_3","text":"","title":"\u4e09\u7ea7\u6807\u9898"}]}